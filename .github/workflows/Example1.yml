# Create an example workflow in your repository 
# that automatically triggers a series of commands whenever code is pushed
#  In this workflow 
  # 1) GitHub Actions checks out the pushed code
  # 2) Installs the bats testing framework
  # 3) And runs a basic command to output the bats version: bats -v

# name of the workflow 
name: learn-github-actions

# display the username of the actor that triggered the workflow
run-name: ${{ github.actor }} is learning GitHub Actions

# workflow run is triggered every time someone pushes a change to the repository or merges a pull request.
on: [push]
# Groups together all the jobs that run in the learn-github-actions workflow
jobs:
  # Defines a job named check-bats-version. The child keys will define properties of the job.
  check-bats-version:
    # Configures the job to run on the latest version of an Ubuntu Linux runner. This means that the job will execute on a fresh virtual machine hosted by GitHub
    runs-on: ubuntu-latest
    # Groups together all the steps that run in the check-bats-version job. Each item nested under this section is a separate action or shell script.
    steps:
       # The uses keyword specifies that this step will run v3 of the actions/checkout action. 
      - uses: actions/checkout@v3
      # This step uses the actions/setup-node@v3 action to install the specified version of the Node.js 
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
      # The run keyword tells the job to execute a command on the runner. 
      # In this case, you are using npm to install the bats software testing package.    
      - run: npm install -g bats
      # Finally, you'll run the bats command with a parameter that outputs the software version.
      - run: bats -v
